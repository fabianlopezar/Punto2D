/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista;

import modelo.Punto2D;
import modelo.Utilities;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.io.IOException;
import java.util.LinkedList;
import javax.swing.JOptionPane;

/**
 *
 * @author INTEL i 7
 */
public class UIpunto extends javax.swing.JFrame {

    /**
     * Creates new form UIpunto
     */
    public LinkedList<Punto2D> listaPuntos2D;

    public boolean cambio;

    public UIpunto() {
        initComponents();
        listaPuntos2D = new LinkedList<>();
        agregarMouseListener(this);
        cambio = true;
    }

    //lo agrego a la lista
    public void CrearNuevoObjeto(double px, double py) {
        Punto2D newObj = new Punto2D(px, py);
        //listaPuntos2D.add(newObj);
        //Metodo AgregarObjetoALinkedList
        AgregarObjetoALinkedList(newObj);

    }

    public void AgregarObjetoALinkedList(Punto2D newObj) {
        if (cambio) {
            //agregar al principio            
            listaPuntos2D.addFirst(newObj);
            System.out.println("Se guardo al PRINCIPIO de la lista : " + listaPuntos2D);
        } else {
            //agregar al final
            listaPuntos2D.addLast(newObj);
            System.out.println("Se guardo al FINAL de la lista : " + listaPuntos2D);
        }
    }

    //escucha cuando el usuario da click.
    public void agregarMouseListener(UIpunto frame) {
        frame.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                double x = e.getX();
                double y = e.getY();

                CrearNuevoObjeto(x, y);// creo un objeto.
                System.out.println("Clic en la ventana en: X=" + x + ", Y=" + y);
                MostrarEnPantalla();
            }
        });
    }

    /**
     * 1
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        SaveButton = new javax.swing.JButton();
        LoadButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        ShowText = new javax.swing.JTextArea();
        ShowPointsButton = new javax.swing.JButton();
        QuitButton = new javax.swing.JButton();
        LoadButton1 = new javax.swing.JButton();
        LoadButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        SaveButton.setText("Save Data");
        SaveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveButtonActionPerformed(evt);
            }
        });

        LoadButton.setText("Load Data");
        LoadButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LoadButtonActionPerformed(evt);
            }
        });

        ShowText.setEditable(false);
        ShowText.setColumns(20);
        ShowText.setRows(5);
        jScrollPane1.setViewportView(ShowText);

        ShowPointsButton.setText("Show Points");
        ShowPointsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ShowPointsButtonActionPerformed(evt);
            }
        });

        QuitButton.setText("Quit");
        QuitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                QuitButtonActionPerformed(evt);
            }
        });

        LoadButton1.setText("Principio | Fin");
        LoadButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LoadButton1ActionPerformed(evt);
            }
        });

        LoadButton2.setText("Invertiir");
        LoadButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LoadButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(649, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(QuitButton))
                            .addComponent(LoadButton)
                            .addComponent(SaveButton)
                            .addComponent(ShowPointsButton)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(LoadButton1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(LoadButton2)))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ShowPointsButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(SaveButton)
                .addGap(18, 18, 18)
                .addComponent(LoadButton)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LoadButton1)
                    .addComponent(LoadButton2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(QuitButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void LoadButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LoadButtonActionPerformed
        try {
            listaPuntos2D = Utilities.readFile();
            JOptionPane.showMessageDialog(null, "Si se cargo el archivo.");
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(null, "error");
        }
    }//GEN-LAST:event_LoadButtonActionPerformed

    private void SaveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveButtonActionPerformed
        try {
            // Guardar la lista de puntos en formato JSON

            boolean t = Utilities.saveFile(listaPuntos2D);
            if (t) {
                JOptionPane.showMessageDialog(null, "Si se guardo el archivo en la raiz");
            } else {
                JOptionPane.showMessageDialog(null, "No");
            }
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(null, "error");
        }

    }//GEN-LAST:event_SaveButtonActionPerformed

    private void ShowPointsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ShowPointsButtonActionPerformed
        MostrarEnPantalla();
    }//GEN-LAST:event_ShowPointsButtonActionPerformed

    public void MostrarEnPantalla() {
        StringBuilder mostrar = new StringBuilder();
        mostrar.append("X          Y\n"); // Encabezado

        for (Punto2D elem : listaPuntos2D) {
            mostrar.append(elem.toString()).append("\n");
        }

        ShowText.setText(mostrar.toString());
    }
    private void QuitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_QuitButtonActionPerformed
        System.exit(0);
    }//GEN-LAST:event_QuitButtonActionPerformed

    private void LoadButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LoadButton1ActionPerformed
        cambio = !cambio;
        System.out.println("Soy cambio: " + cambio);
    }//GEN-LAST:event_LoadButton1ActionPerformed

    private void LoadButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LoadButton2ActionPerformed
        //Invertir lista.
        LinkedList<Punto2D> listaPuntos2DInvertida;
        listaPuntos2DInvertida = new LinkedList<>();

        System.out.println("Lista invertida: " + listaPuntos2DInvertida);
        for (int i = listaPuntos2D.size() - 1; i >= 0; i--) {
            listaPuntos2DInvertida.add(listaPuntos2D.get(i));
        }
        System.out.println("Lista invertida: " + listaPuntos2DInvertida);
    }//GEN-LAST:event_LoadButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */

        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UIpunto.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UIpunto.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UIpunto.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UIpunto.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UIpunto().setVisible(true);
            }
        });

    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton LoadButton;
    private javax.swing.JButton LoadButton1;
    private javax.swing.JButton LoadButton2;
    private javax.swing.JButton QuitButton;
    private javax.swing.JButton SaveButton;
    private javax.swing.JButton ShowPointsButton;
    private javax.swing.JTextArea ShowText;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
